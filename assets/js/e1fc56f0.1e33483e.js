"use strict";(self.webpackChunkgfdoc=self.webpackChunkgfdoc||[]).push([[59827],{86665:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>o,frontMatter:()=>l,metadata:()=>a,toc:()=>d});var r=t(74848),s=t(28453);const l={title:"\u6570\u636e\u6821\u9a8c-\u65b9\u6cd5\u4ecb\u7ecd",sidebar_position:8},i=void 0,a={id:"\u6838\u5fc3\u7ec4\u4ef6/\u6570\u636e\u6821\u9a8c/\u6570\u636e\u6821\u9a8c-\u65b9\u6cd5\u4ecb\u7ecd",title:"\u6570\u636e\u6821\u9a8c-\u65b9\u6cd5\u4ecb\u7ecd",description:"\u4ee5\u4e0b\u5e38\u7528\u65b9\u6cd5\u5217\u8868\uff0c\u6587\u6863\u66f4\u65b0\u53ef\u80fd\u6ede\u540e\u4e8e\u4ee3\u7801\u65b0\u7279\u6027\uff0c\u66f4\u591a\u7684\u65b9\u6cd5\u53ca\u793a\u4f8b\u8bf7\u53c2\u8003\u4ee3\u7801\u6587\u6863\uff1a https://pkg.go.dev/github.com/gogf/gf/v2/util/gvalid",source:"@site/docs/4-\u6838\u5fc3\u7ec4\u4ef6/6-\u6570\u636e\u6821\u9a8c/8-\u6570\u636e\u6821\u9a8c-\u65b9\u6cd5\u4ecb\u7ecd.md",sourceDirName:"4-\u6838\u5fc3\u7ec4\u4ef6/6-\u6570\u636e\u6821\u9a8c",slug:"/\u6838\u5fc3\u7ec4\u4ef6/\u6570\u636e\u6821\u9a8c/\u6570\u636e\u6821\u9a8c-\u65b9\u6cd5\u4ecb\u7ecd",permalink:"/gf-site/docs/\u6838\u5fc3\u7ec4\u4ef6/\u6570\u636e\u6821\u9a8c/\u6570\u636e\u6821\u9a8c-\u65b9\u6cd5\u4ecb\u7ecd",draft:!1,unlisted:!1,editUrl:"https://github.com/gogf/gf-site/blob/main/docs/4-\u6838\u5fc3\u7ec4\u4ef6/6-\u6570\u636e\u6821\u9a8c/8-\u6570\u636e\u6821\u9a8c-\u65b9\u6cd5\u4ecb\u7ecd.md",tags:[],version:"current",lastUpdatedBy:"John",lastUpdatedAt:172951756e4,sidebarPosition:8,frontMatter:{title:"\u6570\u636e\u6821\u9a8c-\u65b9\u6cd5\u4ecb\u7ecd",sidebar_position:8},sidebar:"hiddenSidebar",previous:{title:"\u6570\u636e\u6821\u9a8c-\u81ea\u5b9a\u4e49\u9519\u8bef",permalink:"/gf-site/docs/\u6838\u5fc3\u7ec4\u4ef6/\u6570\u636e\u6821\u9a8c/\u6570\u636e\u6821\u9a8c-\u81ea\u5b9a\u4e49\u9519\u8bef"},next:{title:"\u6570\u636e\u6821\u9a8c-\u5e38\u89c1\u95ee\u9898",permalink:"/gf-site/docs/\u6838\u5fc3\u7ec4\u4ef6/\u6570\u636e\u6821\u9a8c/\u6570\u636e\u6821\u9a8c-\u5e38\u89c1\u95ee\u9898"}},c={},d=[{value:"<code>New</code>",id:"new",level:2},{value:"<code>Run</code>",id:"run",level:2},{value:"<code>Clone</code>",id:"clone",level:2},{value:"I18n",id:"i18n",level:2},{value:"Bail",id:"bail",level:2},{value:"<code>Ci</code>",id:"ci",level:2},{value:"Data",id:"data",level:2},{value:"Assoc",id:"assoc",level:2},{value:"Rules",id:"rules",level:2},{value:"<code>Message</code>",id:"message",level:2},{value:"RuleFunc",id:"rulefunc",level:2},{value:"RuleFuncMap",id:"rulefuncmap",level:2}];function u(n){const e={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:["\u4ee5\u4e0b\u5e38\u7528\u65b9\u6cd5\u5217\u8868\uff0c\u6587\u6863\u66f4\u65b0\u53ef\u80fd\u6ede\u540e\u4e8e\u4ee3\u7801\u65b0\u7279\u6027\uff0c\u66f4\u591a\u7684\u65b9\u6cd5\u53ca\u793a\u4f8b\u8bf7\u53c2\u8003\u4ee3\u7801\u6587\u6863\uff1a ",(0,r.jsx)(e.a,{href:"https://pkg.go.dev/github.com/gogf/gf/v2/util/gvalid",children:"https://pkg.go.dev/github.com/gogf/gf/v2/util/gvalid"})]}),"\n",(0,r.jsx)(e.h2,{id:"new",children:(0,r.jsx)(e.code,{children:"New"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(e.code,{children:"New"})," \u521b\u5efa\u5e76\u8fd4\u56de\u4e00\u4e2a ",(0,r.jsx)(e.code,{children:"Validator"})," \u7684\u65b0\u5bf9\u8c61\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u683c\u5f0f\uff1a"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"New() *Validator\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'func ExampleNew() {\n  \tvalidator := gvalid.New()\n\n  \tif err := validator.Data(16).Rules("min:18").Run(context.Background()); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The value `16` must be equal or greater than 18\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"run",children:(0,r.jsx)(e.code,{children:"Run"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(e.code,{children:"Run"})," \u5bf9\u7ed9\u5b9a\u89c4\u5219\u548c\u4fe1\u606f\u7684\u6570\u636e\u8fdb\u884c\u6821\u9a8c\u64cd\u4f5c\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u683c\u5f0f\uff1a"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Run(ctx context.Context) Error\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'func ExampleValidator_Run() {\n  \t// check value mode\n  \tif err := g.Validator().Data(16).Rules("min:18").Run(context.Background()); err != nil {\n  \t\tfmt.Println("check value err:", err)\n  \t}\n  \t// check map mode\n  \tdata := map[string]interface{}{\n  \t\t"passport":  "",\n  \t\t"password":  "123456",\n  \t\t"password2": "1234567",\n  \t}\n  \trules := map[string]string{\n  \t\t"passport":  "required|length:6,16",\n  \t\t"password":  "required|length:6,16|same:password2",\n  \t\t"password2": "required|length:6,16",\n  \t}\n  \tif err := g.Validator().Data(data).Rules(rules).Run(context.Background()); err != nil {\n  \t\tfmt.Println("check map err:", err)\n  \t}\n  \t// check struct mode\n  \ttype Params struct {\n  \t\tPage      int    `v:"required|min:1"`\n  \t\tSize      int    `v:"required|between:1,100"`\n  \t\tProjectId string `v:"between:1,10000"`\n  \t}\n  \trules = map[string]string{\n  \t\t"Page":      "required|min:1",\n  \t\t"Size":      "required|between:1,100",\n  \t\t"ProjectId": "between:1,10000",\n  \t}\n  \tobj := &Params{\n  \t\tPage: 0,\n  \t\tSize: 101,\n  \t}\n  \tif err := g.Validator().Data(obj).Run(context.Background()); err != nil {\n  \t\tfmt.Println("check struct err:", err)\n  \t}\n\n  \t// May Output:\n  \t// check value err: The value `16` must be equal or greater than 18\n  \t// check map err: The passport field is required; The passport value `` length must be between 6 and 16; The password value `123456` must be the same as field password2\n  \t// check struct err: The Page value `0` must be equal or greater than 1; The Size value `101` must be between 1 and 100\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"clone",children:(0,r.jsx)(e.code,{children:"Clone"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u8bf4\u660e\uff1aClone\u521b\u5efa\u5e76\u8fd4\u56de\u4e00\u4e2a\u5f53\u524dValidator\u7684\u503c\u62f7\u8d1d\u5bf9\u8c61\u3002"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u683c\u5f0f\uff1a"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"(v *Validator) Clone() *Validator\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'func ExampleValidator_Clone() {\n  \tif err := g.Validator().Data(16).Rules("min:18").Run(context.Background()); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \tif err := g.Validator().Clone().Data(20).Run(context.Background()); err != nil {\n  \t\tfmt.Println(err)\n  \t} else {\n  \t\tfmt.Println("Check Success!")\n  \t}\n\n  \t// Output:\n  \t// The value `16` must be equal or greater than 18\n  \t// Check Success!\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"i18n",children:"I18n"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(e.code,{children:"I18n"})," \u65b9\u6cd5\u7528\u4e8e\u8bbe\u7f6e\u5f53\u524d\u6821\u9a8c\u5bf9\u8c61\u7684 ",(0,r.jsx)(e.code,{children:"I18N"})," \u56fd\u9645\u5316\u7ec4\u4ef6\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6821\u9a8c\u7ec4\u4ef6\u4f7f\u7528\u7684\u662f\u6846\u67b6\u5168\u5c40\u9ed8\u8ba4\u7684 ",(0,r.jsx)(e.code,{children:"i18n"})," \u7ec4\u4ef6\u5bf9\u8c61\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u683c\u5f0f\uff1a"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"I18n(i18nManager *gi18n.Manager) *Validator\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'func ExampleValidator_I18n() {\n  \tvar (\n  \t\ti18nManager = gi18n.New()\n  \t\tctxCn       = gi18n.WithLanguage(context.Background(), "cn")\n  \t\tvalidator   = gvalid.New()\n  \t)\n\n  \tvalidator = validator.Data(16).Rules("min:18")\n\n  \tif err := validator.Run(context.Background()); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \tif err := validator.I18n(i18nManager).Run(ctxCn); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// The value `16` must be equal or greater than 18\n  \t// \u5b57\u6bb5\u503c`16`\u5b57\u6bb5\u6700\u5c0f\u503c\u5e94\u5f53\u4e3a18\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"bail",children:"Bail"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(e.code,{children:"Bail"})," \u65b9\u6cd5\u7528\u4e8e\u8bbe\u5b9a\u53ea\u8981\u540e\u7eed\u7684\u591a\u4e2a\u6821\u9a8c\u4e2d\u6709\u4e00\u4e2a\u89c4\u5219\u6821\u9a8c\u5931\u8d25\u5219\u505c\u6b62\u6821\u9a8c\u7acb\u5373\u8fd4\u56de\u9519\u8bef\u7ed3\u679c\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u683c\u5f0f\uff1a"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Bail() *Validator\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'func ExampleValidator_Bail() {\n  \ttype BizReq struct {\n  \t\tAccount   string `v:"required|length:6,16|same:QQ"`\n  \t\tQQ        string\n  \t\tPassword  string `v:"required|same:Password2"`\n  \t\tPassword2 string `v:"required"`\n  \t}\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tAccount:   "gf",\n  \t\t\tQQ:        "123456",\n  \t\t\tPassword:  "goframe.org",\n  \t\t\tPassword2: "goframe.org",\n  \t\t}\n  \t)\n\n  \tif err := g.Validator().Bail().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println("Use Bail Error:", err)\n  \t}\n\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println("Not Use Bail Error:", err)\n  \t}\n\n  \t// output:\n  \t// Use Bail Error: The Account value `gf` length must be between 6 and 16\n  \t// Not Use Bail Error: The Account value `gf` length must be between 6 and 16; The Account value `gf` must be the same as field QQ\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"ci",children:(0,r.jsx)(e.code,{children:"Ci"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(e.code,{children:"Ci"})," \u65b9\u6cd5\u7528\u4e8e\u8bbe\u7f6e\u9700\u8981\u6bd4\u8f83\u6570\u503c\u7684\u89c4\u5219\u65f6\uff0c\u4e0d\u533a\u5206\u5b57\u6bb5\u7684\u5927\u5c0f\u5199\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u683c\u5f0f\uff1a"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Ci() *Validator\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'func ExampleValidator_Ci() {\n\n  \ttype BizReq struct {\n  \t\tAccount   string `v:"required"`\n  \t\tPassword  string `v:"required|same:Password2"`\n  \t\tPassword2 string `v:"required"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tAccount:   "gf",\n  \t\t\tPassword:  "Goframe.org", // Diff from Password2, but because of "ci", rule check passed\n  \t\t\tPassword2: "goframe.org",\n  \t\t}\n  \t)\n\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Println("Not Use CI Error:", err)\n  \t}\n\n  \tif err := g.Validator().Ci().Data(req).Run(ctx); err == nil {\n  \t\tfmt.Println("Use CI Passed!")\n  \t}\n\n  \t// output:\n  \t// Not Use CI Error: The Password value `Goframe.org` must be the same as field Password2\n  \t// Use CI Passed!\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"data",children:"Data"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(e.code,{children:"Data"})," \u65b9\u6cd5\u7528\u4e8e\u4f20\u9012\u9700\u8981\u8054\u5408\u6821\u9a8c\u7684\u6570\u636e\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u683c\u5f0f\uff1a"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Data(data interface{}) *Validator\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'func ExampleValidator_Data() {\n  \ttype BizReq struct {\n  \t\tPassword1 string `v:"password"`\n  \t\tPassword2 string `v:"password"`\n  \t}\n\n  \tvar (\n  \t\tctx = context.Background()\n  \t\treq = BizReq{\n  \t\t\tPassword1: "goframe",\n  \t\t\tPassword2: "gofra", // error length between 6 and 18\n  \t\t}\n  \t)\n  \tif err := g.Validator().Data(req).Run(ctx); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The Password2 value `gofra` is not a valid password format\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"assoc",children:"Assoc"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8bf4\u660e\uff1a",(0,r.jsx)(e.code,{children:"Assoc"})," \u662f\u4e00\u4e2a\u94fe\u5f0f\u64cd\u4f5c\u51fd\u6570\uff0c\u4e3a\u5f53\u524d ",(0,r.jsx)(e.code,{children:"Validator"})," \u8bbe\u7f6e\u9a8c\u8bc1\u7684\u6570\u636e\u3002\u53c2\u6570 ",(0,r.jsx)(e.code,{children:"assoc"})," \u7684\u7c7b\u578b\u901a\u5e38\u662f ",(0,r.jsx)(e.code,{children:"map"}),"\uff0c\u6307\u5b9a\u4e86 ",(0,r.jsx)(e.code,{children:"union validator"})," \u4e2d\u7684 ",(0,r.jsx)(e.code,{children:"map"})," \u7684\u503c\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u6ce8\u610f\uff1a\u4f7f\u7528\u975e ",(0,r.jsx)(e.code,{children:"nil"})," \u7684 ",(0,r.jsx)(e.code,{children:"assoc"})," \u53c2\u6570\uff0c\u4f1a\u5c06 ",(0,r.jsx)(e.code,{children:"useDataInsteadOfObjectAttributes"})," \u5c5e\u6027\u8bbe\u7f6e\u4e3a ",(0,r.jsx)(e.code,{children:"true"}),"\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u683c\u5f0f\uff1a"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Assoc(assoc interface{}) *Validator\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'func ExampleValidator_Assoc() {\n\n  \ttype User struct {\n  \t\tName string `v:"required"`\n  \t\tType int    `v:"required"`\n  \t}\n\n  \tdata := g.Map{\n  \t\t"name": "john",\n  \t}\n\n  \tuser := User{}\n\n  \tif err := gconv.Scan(data, &user); err != nil {\n  \t\tpanic(err)\n  \t}\n\n  \tif err := g.Validator().Data(user).Assoc(data).Run(context.Background()); err != nil {\n  \t\tfmt.Print(err)\n  \t}\n\n  \t// Output:\n  \t// The Type field is required\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"rules",children:"Rules"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(e.code,{children:"Rules"})," \u65b9\u6cd5\u7528\u4e8e\u4f20\u9012\u5f53\u524d\u94fe\u5f0f\u64cd\u4f5c\u6821\u9a8c\u7684\u81ea\u5b9a\u4e49\u6821\u9a8c\u89c4\u5219\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u683c\u5f0f\uff1a"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Rules(rules interface{}) *Validator\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'func ExampleValidator_Rules() {\n\n  \tif err := g.Validator().Data(16).Rules("min:18").Run(context.Background()); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// The value `16` must be equal or greater than 18\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"message",children:(0,r.jsx)(e.code,{children:"Message"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8bf4\u660e\uff1a ",(0,r.jsx)(e.code,{children:"Messages"})," \u65b9\u6cd5\u7528\u4e8e\u4f20\u9012\u5f53\u524d\u94fe\u5f0f\u64cd\u4f5c\u6821\u9a8c\u7684\u81ea\u5b9a\u4e49\u9519\u8bef\u63d0\u793a\u4fe1\u606f\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u683c\u5f0f\uff1a"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Messages(messages interface{}) *Validator\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'func ExampleValidator_Messages() {\n  \tif err := g.Validator().Data(16).Rules("min:18").Messages("Can not regist, Age is less then 18!").Run(context.Background()); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// Can not regist, Age is less then 18!\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"rulefunc",children:"RuleFunc"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8bf4\u660e\uff1a",(0,r.jsx)(e.code,{children:"RuleFunc"})," \u5411\u5f53\u524d\u7684 ",(0,r.jsx)(e.code,{children:"Validator"})," \u6ce8\u518c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u6821\u9a8c\u89c4\u5219\u7684\u51fd\u6570\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u683c\u5f0f\uff1a"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"RuleFunc(rule string, f RuleFunc) *Validator\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'func ExampleValidator_RuleFunc() {\n  \tvar (\n  \t\tctx             = context.Background()\n  \t\tlenErrRuleName  = "LenErr"\n  \t\tpassErrRuleName = "PassErr"\n  \t\tlenErrRuleFunc  = func(ctx context.Context, in gvalid.RuleFuncInput) error {\n  \t\t\tpass := in.Value.String()\n  \t\t\tif len(pass) != 6 {\n  \t\t\t\treturn errors.New(in.Message)\n  \t\t\t}\n  \t\t\treturn nil\n  \t\t}\n  \t\tpassErrRuleFunc = func(ctx context.Context, in gvalid.RuleFuncInput) error {\n  \t\t\tpass := in.Value.String()\n  \t\t\tif m := in.Data.Map(); m["data"] != pass {\n  \t\t\t\treturn errors.New(in.Message)\n  \t\t\t}\n  \t\t\treturn nil\n  \t\t}\n  \t)\n\n  \ttype LenErrStruct struct {\n  \t\tValue string `v:"uid@LenErr#Value Length Error!"`\n  \t\tData  string `p:"data"`\n  \t}\n\n  \tst := &LenErrStruct{\n  \t\tValue: "123",\n  \t\tData:  "123456",\n  \t}\n  \t// single error sample\n  \tif err := g.Validator().RuleFunc(lenErrRuleName, lenErrRuleFunc).Data(st).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \ttype MultiErrorStruct struct {\n  \t\tValue string `v:"uid@LenErr|PassErr#Value Length Error!|Pass is not Same!"`\n  \t\tData  string `p:"data"`\n  \t}\n\n  \tmulti := &MultiErrorStruct{\n  \t\tValue: "123",\n  \t\tData:  "123456",\n  \t}\n  \t// multi error sample\n  \tif err := g.Validator().RuleFunc(lenErrRuleName, lenErrRuleFunc).RuleFunc(passErrRuleName, passErrRuleFunc).Data(multi).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// Value Length Error!\n  \t// Value Length Error!; Pass is not Same!\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"rulefuncmap",children:"RuleFuncMap"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8bf4\u660e\uff1a",(0,r.jsx)(e.code,{children:"RuleFuncMap"})," \u5411\u5f53\u524d\u7684 ",(0,r.jsx)(e.code,{children:"Validator"})," \u6ce8\u518c\u591a\u4e2a\u81ea\u5b9a\u4e49\u6821\u9a8c\u89c4\u5219\u7684\u51fd\u6570\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u683c\u5f0f\uff1a"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"RuleFuncMap(m map[string]RuleFunc) *Validator\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u793a\u4f8b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'func ExampleValidator_RuleFuncMap() {\n  \tvar (\n  \t\tctx             = context.Background()\n  \t\tlenErrRuleName  = "LenErr"\n  \t\tpassErrRuleName = "PassErr"\n  \t\tlenErrRuleFunc  = func(ctx context.Context, in gvalid.RuleFuncInput) error {\n  \t\t\tpass := in.Value.String()\n  \t\t\tif len(pass) != 6 {\n  \t\t\t\treturn errors.New(in.Message)\n  \t\t\t}\n  \t\t\treturn nil\n  \t\t}\n  \t\tpassErrRuleFunc = func(ctx context.Context, in gvalid.RuleFuncInput) error {\n  \t\t\tpass := in.Value.String()\n  \t\t\tif m := in.Data.Map(); m["data"] != pass {\n  \t\t\t\treturn errors.New(in.Message)\n  \t\t\t}\n  \t\t\treturn nil\n  \t\t}\n  \t\truleMap = map[string]gvalid.RuleFunc{\n  \t\t\tlenErrRuleName:  lenErrRuleFunc,\n  \t\t\tpassErrRuleName: passErrRuleFunc,\n  \t\t}\n  \t)\n\n  \ttype MultiErrorStruct struct {\n  \t\tValue string `v:"uid@LenErr|PassErr#Value Length Error!|Pass is not Same!"`\n  \t\tData  string `p:"data"`\n  \t}\n\n  \tmulti := &MultiErrorStruct{\n  \t\tValue: "123",\n  \t\tData:  "123456",\n  \t}\n\n  \tif err := g.Validator().RuleFuncMap(ruleMap).Data(multi).Run(ctx); err != nil {\n  \t\tfmt.Println(err)\n  \t}\n\n  \t// Output:\n  \t// Value Length Error!; Pass is not Same!\n}\n'})})]})}function o(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(u,{...n})}):u(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>a});var r=t(96540);const s={},l=r.createContext(s);function i(n){const e=r.useContext(l);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),r.createElement(l.Provider,{value:e},n.children)}}}]);