"use strict";(self.webpackChunkgfdoc=self.webpackChunkgfdoc||[]).push([[74017],{93638:(n,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>a});var e=r(74848),c=r(28453);const s={title:"\u7c7b\u578b\u8f6c\u6362-Converter\u7279\u6027",sidebar_position:5},o=void 0,i={id:"\u6838\u5fc3\u7ec4\u4ef6/\u7c7b\u578b\u8f6c\u6362/\u7c7b\u578b\u8f6c\u6362-Converter\u7279\u6027",title:"\u7c7b\u578b\u8f6c\u6362-Converter\u7279\u6027",description:"\u4ece\u6846\u67b6 v2.6.2 \u7248\u672c\u5f00\u59cb\uff0c\u8f6c\u6362\u7ec4\u4ef6\u63d0\u4f9b\u4e86 Converter \u7279\u6027\uff0c\u5141\u8bb8\u5f00\u53d1\u8005\u53ef\u4ee5\u81ea\u5b9a\u4e49 Converter\u8f6c\u6362\u65b9\u6cd5\u6307\u5b9a\u7279\u5b9a\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\u903b\u8f91\u3002",source:"@site/versioned_docs/version-2.7.x/4-\u6838\u5fc3\u7ec4\u4ef6/7-\u7c7b\u578b\u8f6c\u6362/5-\u7c7b\u578b\u8f6c\u6362-Converter\u7279\u6027.md",sourceDirName:"4-\u6838\u5fc3\u7ec4\u4ef6/7-\u7c7b\u578b\u8f6c\u6362",slug:"/\u6838\u5fc3\u7ec4\u4ef6/\u7c7b\u578b\u8f6c\u6362/\u7c7b\u578b\u8f6c\u6362-Converter\u7279\u6027",permalink:"/gf-site/docs/2.7.x/\u6838\u5fc3\u7ec4\u4ef6/\u7c7b\u578b\u8f6c\u6362/\u7c7b\u578b\u8f6c\u6362-Converter\u7279\u6027",draft:!1,unlisted:!1,editUrl:"https://github.com/gogf/gf-site/blob/main/versioned_docs/version-2.7.x/4-\u6838\u5fc3\u7ec4\u4ef6/7-\u7c7b\u578b\u8f6c\u6362/5-\u7c7b\u578b\u8f6c\u6362-Converter\u7279\u6027.md",tags:[],version:"2.7.x",lastUpdatedBy:"John",lastUpdatedAt:172999724e4,sidebarPosition:5,frontMatter:{title:"\u7c7b\u578b\u8f6c\u6362-Converter\u7279\u6027",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"\u7c7b\u578b\u8f6c\u6362-Scan\u8f6c\u6362",permalink:"/gf-site/docs/2.7.x/\u6838\u5fc3\u7ec4\u4ef6/\u7c7b\u578b\u8f6c\u6362/\u7c7b\u578b\u8f6c\u6362-Scan\u8f6c\u6362"},next:{title:"\u7c7b\u578b\u8f6c\u6362-UnmarshalValue",permalink:"/gf-site/docs/2.7.x/\u6838\u5fc3\u7ec4\u4ef6/\u7c7b\u578b\u8f6c\u6362/\u7c7b\u578b\u8f6c\u6362-UnmarshalValue"}},d={},a=[{value:"\u8f6c\u6362\u65b9\u6cd5\u5b9a\u4e49",id:"\u8f6c\u6362\u65b9\u6cd5\u5b9a\u4e49",level:2},{value:"\u7ed3\u6784\u4f53\u7c7b\u578b\u8f6c\u6362",id:"\u7ed3\u6784\u4f53\u7c7b\u578b\u8f6c\u6362",level:2},{value:"\u522b\u540d\u7c7b\u578b\u8f6c\u6362",id:"\u522b\u540d\u7c7b\u578b\u8f6c\u6362",level:2}];function p(n){const t={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(t.p,{children:["\u4ece\u6846\u67b6 v2.6.2 \u7248\u672c\u5f00\u59cb\uff0c\u8f6c\u6362\u7ec4\u4ef6\u63d0\u4f9b\u4e86 ",(0,e.jsx)(t.code,{children:"Converter"})," \u7279\u6027\uff0c\u5141\u8bb8\u5f00\u53d1\u8005\u53ef\u4ee5\u81ea\u5b9a\u4e49 ",(0,e.jsx)(t.code,{children:"Converter"}),"\u8f6c\u6362\u65b9\u6cd5\u6307\u5b9a\u7279\u5b9a\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\u903b\u8f91\u3002"]}),"\n",(0,e.jsx)(t.h2,{id:"\u8f6c\u6362\u65b9\u6cd5\u5b9a\u4e49",children:"\u8f6c\u6362\u65b9\u6cd5\u5b9a\u4e49"}),"\n",(0,e.jsx)(t.p,{children:"\u8f6c\u6362\u65b9\u6cd5\u5b9a\u4e49\u5982\u4e0b:"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{children:"func(T1) (T2, error)\n"})}),"\n",(0,e.jsxs)(t.p,{children:["\u5176\u4e2d ",(0,e.jsx)(t.code,{children:"T1"})," \u9700\u8981\u4e3a\u975e\u6307\u9488\u5bf9\u8c61\uff0c ",(0,e.jsx)(t.code,{children:"T2"})," \u9700\u8981\u4e3a\u6307\u9488\u7c7b\u578b\uff0c\u5982\u679c\u7c7b\u578b\u4e0d\u6b63\u786e\u8f6c\u6362\u65b9\u6cd5\u6ce8\u518c\u5c06\u4f1a\u62a5\u9519\u3002"]}),"\n",(0,e.jsxs)(t.p,{children:["\u8f93\u5165\u53c2\u6570( ",(0,e.jsx)(t.code,{children:"T1"}),")\u5fc5\u987b\u4e3a\u975e\u6307\u9488\u5bf9\u8c61\u7684\u8bbe\u8ba1\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u4fdd\u8bc1\u8f93\u5165\u53c2\u6570\u7684\u5b89\u5168\uff0c\u5c3d\u53ef\u80fd\u907f\u514d\u5728\u8f6c\u6362\u65b9\u6cd5\u5185\u90e8\u4fee\u6539\u8f93\u5165\u53c2\u6570\u5f15\u8d77\u4f5c\u7528\u57df\u5916\u95ee\u9898\u3002"]}),"\n",(0,e.jsx)(t.p,{children:"\u6ce8\u518c\u8f6c\u6362\u65b9\u6cd5\u7684\u51fd\u6570\u5982\u4e0b:"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{children:"// RegisterConverter to register custom converter.\n// It must be registered before you use this custom converting feature.\n// It is suggested to do it in boot procedure of the process.\n//\n// Note:\n//  1. The parameter `fn` must be defined as pattern `func(T1) (T2, error)`.\n//     It will convert type `T1` to type `T2`.\n//  2. The `T1` should not be type of pointer, but the `T2` should be type of pointer.\nfunc RegisterConverter(fn interface{}) (err error)\n"})}),"\n",(0,e.jsx)(t.h2,{id:"\u7ed3\u6784\u4f53\u7c7b\u578b\u8f6c\u6362",children:"\u7ed3\u6784\u4f53\u7c7b\u578b\u8f6c\u6362"}),"\n",(0,e.jsx)(t.p,{children:"\u5e38\u89c1\u7684\u81ea\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\u662f\u7ed3\u6784\u4f53\u4e4b\u95f4\u7684\u7c7b\u578b\u8f6c\u6362\u3002\u6211\u4eec\u6765\u770b\u4e24\u4e2a\u4f8b\u5b50\u3002"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/gogf/gf/v2/util/gconv"\n)\n\ntype Src struct {\n\tA int\n}\n\ntype Dst struct {\n\tB int\n}\n\ntype SrcWrap struct {\n\tValue Src\n}\n\ntype DstWrap struct {\n\tValue Dst\n}\n\nfunc SrcToDstConverter(src Src) (dst *Dst, err error) {\n\treturn &Dst{B: src.A}, nil\n}\n\n// SrcToDstConverter is custom converting function for custom type.\nfunc main() {\n\t// register custom converter function.\n\terr := gconv.RegisterConverter(SrcToDstConverter)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// custom struct converting.\n\tvar (\n\t\tsrc = Src{A: 1}\n\t\tdst *Dst\n\t)\n\terr = gconv.Scan(src, &dst)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfmt.Println("src:", src)\n\tfmt.Println("dst:", dst)\n\n\t// custom struct attributes converting.\n\tvar (\n\t\tsrcWrap = SrcWrap{Src{A: 1}}\n\t\tdstWrap *DstWrap\n\t)\n\terr = gconv.Scan(srcWrap, &dstWrap)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfmt.Println("srcWrap:", srcWrap)\n\tfmt.Println("dstWrap:", dstWrap)\n}\n'})}),"\n",(0,e.jsxs)(t.p,{children:["\u5728\u8be5\u793a\u4f8b\u4ee3\u7801\u4e2d\uff0c\u6f14\u793a\u4e86\u4e24\u79cd\u7c7b\u578b\u8f6c\u6362\u573a\u666f:\u81ea\u5b9a\u4e49\u7ed3\u6784\u4f53\u8f6c\u6362\uff0c\u4ee5\u53ca\u7ed3\u6784\u4f53\u4f5c\u4e3a\u5c5e\u6027\u7684\u81ea\u52a8\u8f6c\u6362\u3002\u8f6c\u6362\u65b9\u6cd5\u4f7f\u7528\u7684\u662f\u901a\u7528\u7684\u7ed3\u6784\u4f53\u8f6c\u6362\u65b9\u6cd5 ",(0,e.jsx)(t.code,{children:"gconv.Scan"}),"\uff0c\u8be5\u65b9\u6cd5\u5728\u5185\u90e8\u5b9e\u73b0\u4e2d\u4f1a\u81ea\u52a8\u5224\u65ad\u5982\u679c\u5b58\u5728\u81ea\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362\u51fd\u6570\uff0c\u4f1a\u4f18\u5148\u4f7f\u7528\u81ea\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362\u51fd\u6570\uff0c\u5426\u5219\u4f1a\u8d70\u9ed8\u8ba4\u7684\u8f6c\u6362\u903b\u8f91\u3002"]}),"\n",(0,e.jsx)(t.p,{children:"\u6267\u884c\u540e\uff0c\u7ec8\u7aef\u8f93\u51fa\uff1a"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{children:"src: {1}\ndst: &{1}\nsrcWrap: {{1}}\ndstWrap: &{{1}}\n"})}),"\n",(0,e.jsxs)(t.p,{children:["\u9664\u4e86\u4f7f\u7528 ",(0,e.jsx)(t.code,{children:"gconv.Scan"})," \u65b9\u6cd5\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f ",(0,e.jsx)(t.code,{children:"gconv.ConvertWithRefer"})," \u65b9\u6cd5\u5b9e\u73b0\u7c7b\u578b\u8f6c\u6362\uff0c\u4e24\u8005\u7684\u6548\u679c\u90fd\u662f\u4e00\u6837\u7684\uff1a"]}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/gogf/gf/v2/util/gconv"\n)\n\ntype Src struct {\n\tA int\n}\n\ntype Dst struct {\n\tB int\n}\n\ntype SrcWrap struct {\n\tValue Src\n}\n\ntype DstWrap struct {\n\tValue Dst\n}\n\n// SrcToDstConverter is custom converting function for custom type.\nfunc SrcToDstConverter(src Src) (dst *Dst, err error) {\n\treturn &Dst{B: src.A}, nil\n}\n\nfunc main() {\n\t// register custom converter function.\n\terr := gconv.RegisterConverter(SrcToDstConverter)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// custom struct converting.\n\tvar src = Src{A: 1}\n\tdst := gconv.ConvertWithRefer(src, Dst{})\n\tfmt.Println("src:", src)\n\tfmt.Println("dst:", dst)\n\n\t// custom struct attributes converting.\n\tvar srcWrap = SrcWrap{Src{A: 1}}\n\tdstWrap := gconv.ConvertWithRefer(srcWrap, &DstWrap{})\n\tfmt.Println("srcWrap:", srcWrap)\n\tfmt.Println("dstWrap:", dstWrap)\n}\n'})}),"\n",(0,e.jsx)(t.h2,{id:"\u522b\u540d\u7c7b\u578b\u8f6c\u6362",children:"\u522b\u540d\u7c7b\u578b\u8f6c\u6362"}),"\n",(0,e.jsxs)(t.p,{children:["\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 ",(0,e.jsx)(t.code,{children:"Converter"}),"\u7279\u6027\u5b9e\u73b0 ",(0,e.jsx)(t.strong,{children:"\u522b\u540d\u7c7b\u578b"})," \u7684\u8f6c\u6362\u3002\u522b\u540d\u7c7b\u578b\u4e0d\u9650\u4e8e\u7ed3\u6784\u4f53\uff0c\u4e5f\u53ef\u4ee5\u662f ",(0,e.jsx)(t.code,{children:"int, string"})," \u7b49\u57fa\u7840\u7c7b\u578b\u7684\u522b\u540d\u3002\u6211\u4eec\u6765\u770b\u4e24\u4e2a\u4f8b\u5b50\u3002"]}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/gogf/gf/v2/os/gtime"\n\t"github.com/gogf/gf/v2/util/gconv"\n)\n\ntype MyTime = *gtime.Time\n\ntype Src struct {\n\tA MyTime\n}\n\ntype Dst struct {\n\tB string\n}\n\ntype SrcWrap struct {\n\tValue Src\n}\n\ntype DstWrap struct {\n\tValue Dst\n}\n\n// SrcToDstConverter is custom converting function for custom type.\nfunc SrcToDstConverter(src Src) (dst *Dst, err error) {\n\treturn &Dst{B: src.A.Format("Y-m-d")}, nil\n}\n\n// SrcToDstConverter is custom converting function for custom type.\nfunc main() {\n\t// register custom converter function.\n\terr := gconv.RegisterConverter(SrcToDstConverter)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// custom struct converting.\n\tvar (\n\t\tsrc = Src{A: gtime.Now()}\n\t\tdst *Dst\n\t)\n\terr = gconv.Scan(src, &dst)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfmt.Println("src:", src)\n\tfmt.Println("dst:", dst)\n\n\t// custom struct attributes converting.\n\tvar (\n\t\tsrcWrap = SrcWrap{Src{A: gtime.Now()}}\n\t\tdstWrap *DstWrap\n\t)\n\terr = gconv.Scan(srcWrap, &dstWrap)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfmt.Println("srcWrap:", srcWrap)\n\tfmt.Println("dstWrap:", dstWrap)\n}\n'})}),"\n",(0,e.jsxs)(t.p,{children:["\u4ee3\u7801\u4e2d\u7684 ",(0,e.jsx)(t.code,{children:"type xxx = yyy"}),"\u662f\u7531\u4e8e ",(0,e.jsx)(t.code,{children:"*gtime.Time"})," \u7c7b\u578b\u7684\u9700\u8981\uff0c\u5176\u4ed6\u7c7b\u578b\u53ef\u6839\u636e\u9700\u8981\u662f\u5426\u4f7f\u7528\u522b\u540d\u7b26\u53f7 ",(0,e.jsx)(t.code,{children:"="}),"\uff0c\u4f8b\u5982\u57fa\u7840\u7c7b\u578b ",(0,e.jsx)(t.code,{children:"int, string"})," \u7b49\u662f\u4e0d\u9700\u8981\u522b\u540d\u7b26\u53f7\u7684\u3002"]}),"\n",(0,e.jsx)(t.p,{children:"\u6267\u884c\u540e\uff0c\u7ec8\u7aef\u8f93\u51fa\uff1a"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{children:"src: {2024-01-22 21:45:28}\ndst: &{2024-01-22}\nsrcWrap: {{2024-01-22 21:45:28}}\ndstWrap: &{{2024-01-22}}\n"})}),"\n",(0,e.jsxs)(t.p,{children:["\u540c\u6837\u7684\uff0c\u9664\u4e86\u4f7f\u7528 ",(0,e.jsx)(t.code,{children:"gconv.Scan"})," \u65b9\u6cd5\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 ",(0,e.jsx)(t.code,{children:"gconv.ConvertWithRefer"})," \u65b9\u6cd5\u5b9e\u73b0\u7c7b\u578b\u8f6c\u6362\uff0c\u4e24\u8005\u7684\u6548\u679c\u90fd\u662f\u4e00\u6837\u7684\uff1a"]}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/gogf/gf/v2/os/gtime"\n\t"github.com/gogf/gf/v2/util/gconv"\n)\n\ntype MyTime = *gtime.Time\n\ntype Src struct {\n\tA MyTime\n}\n\ntype Dst struct {\n\tB string\n}\n\ntype SrcWrap struct {\n\tValue Src\n}\n\ntype DstWrap struct {\n\tValue Dst\n}\n\n// SrcToDstConverter is custom converting function for custom type.\nfunc SrcToDstConverter(src Src) (dst *Dst, err error) {\n\treturn &Dst{B: src.A.Format("Y-m-d")}, nil\n}\n\n// SrcToDstConverter is custom converting function for custom type.\nfunc main() {\n\t// register custom converter function.\n\terr := gconv.RegisterConverter(SrcToDstConverter)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// custom struct converting.\n\tvar src = Src{A: gtime.Now()}\n\tdst := gconv.ConvertWithRefer(src, &Dst{})\n\tfmt.Println("src:", src)\n\tfmt.Println("dst:", dst)\n\n\t// custom struct attributes converting.\n\tvar srcWrap = SrcWrap{Src{A: gtime.Now()}}\n\tdstWrap := gconv.ConvertWithRefer(srcWrap, &DstWrap{})\n\tfmt.Println("srcWrap:", srcWrap)\n\tfmt.Println("dstWrap:", dstWrap)\n}\n'})})]})}function u(n={}){const{wrapper:t}={...(0,c.R)(),...n.components};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(p,{...n})}):p(n)}},28453:(n,t,r)=>{r.d(t,{R:()=>o,x:()=>i});var e=r(96540);const c={},s=e.createContext(c);function o(n){const t=e.useContext(s);return e.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function i(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:o(n.components),e.createElement(s.Provider,{value:t},n.children)}}}]);